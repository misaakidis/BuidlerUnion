// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

/*
#S????????????????????????????????????????????????????????????????????????????S#
#*............................................................................*#
#*............................................................................*#
#*............................................................................*#
#*...................,:+****+;,...............................................*#
#*.................;?%?*;;:;+*%%+,............................................*#
#*...............;%%;,.........:*S*,..........................................*#
#*.............:%S;..............,?S+.........................................*#
#*............+#*..................:S%,..:*:..................................*#
#*..........,?#:....................,?S;?S+,..................................*#
#*..........,?,......................:#@?......................,?*............*#
#*.................................:%S;;#+....................,S%,............*#
#*...............................,?S+,..:S%,.................;#?..............*#
#*.......................,,,.....,;,.....,*S*,.............:?S;...............*#
#*..................,;*???????*;,..........:?S*:........,;?S+,................*#
#*................:*%?+:,...,:;?%*,..........:*%?*+;;;+?%?;,..................*#
#*..............,?S*,...........,*S*,...........,;++*+;:,.....................*#
#*.............;S?,...............,?S;........................................*#
#*...........,?S;...................;#?.......................................*#
#*..........,%S,.....................,S%,.......................,:............*#
#*...........:,.......................,%S:.....................,S?,...........*#
#*......................................*#;...................;#?.............*#
#*.......................................;S?,...............,*S+..............*#
#*........................................,*S*,...........,+S?,...............*#
#*..........................................:?%?;,.....,;*%?:.................*#
#*............................................,;*????????;,...................*#
#*................................................,,:,,.......................*#
#*............................................................................*#
#*............................................................................*#
#S????????????????????????????????????????????????????????????????????????????S#
*/

import "./IBuidlerUnionHQ.sol";

contract PriorityLowPass {
    modifier enforceMaxPriorityFee(address feeManagerAddress) {
        IBuidlerUnionHQ feeManager = IBuidlerUnionHQ(feeManagerAddress);
        uint256 priorityFee = tx.gasprice - block.basefee;
        require(priorityFee <= feeManager.getMaxAllowedPriorityFee(), "Priority fee exceeds allowed maximum");
        _;
    }
}
